create TABLE IF NOT EXISTS mpa_rating (
  mpa_rating_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name          VARCHAR(255) NOT NULL
);

create TABLE IF NOT EXISTS films (
  film_id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name          VARCHAR(255) NOT NULL,
  description   VARCHAR(200),
  release_date  DATE,
  duration      INTEGER,
  mpa_rating_id BIGINT REFERENCES mpa_rating (mpa_rating_id)
);

create TABLE IF NOT EXISTS users (
  user_id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email     VARCHAR(255) NOT NULL UNIQUE,
  login     VARCHAR(255) NOT NULL,
  name      VARCHAR(255),
  birthday  DATE
);

create TABLE IF NOT EXISTS user_likes (
  film_id  BIGINT NOT NULL REFERENCES films (film_id) ON delete CASCADE,
  user_id  BIGINT NOT NULL REFERENCES users (user_id) ON delete CASCADE,
  PRIMARY KEY (film_id, user_id)
);

create TABLE IF NOT EXISTS genres (
  genre_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name     VARCHAR(255) NOT NULL
);

create TABLE IF NOT EXISTS film_genres (
  film_id  BIGINT NOT NULL REFERENCES films (film_id) ON delete CASCADE,
  genre_id BIGINT NOT NULL REFERENCES genres (genre_id) ON delete CASCADE,
  PRIMARY KEY (film_id, genre_id)
);

create TABLE IF NOT EXISTS friendship (
  user_id   BIGINT NOT NULL REFERENCES users (user_id) ON delete CASCADE,
  friend_id BIGINT NOT NULL REFERENCES users (user_id) ON delete CASCADE,
  status    VARCHAR(20) NOT NULL DEFAULT 'PENDING',
  PRIMARY KEY (user_id, friend_id)
);

create TABLE IF NOT EXISTS directors (
  director_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name        VARCHAR(255) NOT NULL
);

create TABLE IF NOT EXISTS film_directors (
  film_id     BIGINT NOT NULL REFERENCES films (film_id) ON delete CASCADE,
  director_id BIGINT NOT NULL REFERENCES directors (director_id) ON delete CASCADE,
  PRIMARY KEY (film_id, director_id)
);